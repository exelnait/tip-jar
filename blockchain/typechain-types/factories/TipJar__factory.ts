/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TipJar, TipJarInterface } from "../TipJar";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NewTip",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NewWithdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllTips",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct TipJar.Tip[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "sendTip",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110b9806100616000396000f3fe60806040526004361061004a5760003560e01c8063399ddbbd1461004f5780633ccfd60b1461007a57806354cafb04146100915780638da5cb5b146100ad578063990de8ae146100d8575b600080fd5b34801561005b57600080fd5b50610064610103565b60405161007191906108e0565b60405180910390f35b34801561008657600080fd5b5061008f6102f0565b005b6100ab60048036038101906100a69190610a4b565b6104d1565b005b3480156100b957600080fd5b506100c261068b565b6040516100cf9190610ae4565b60405180910390f35b3480156100e457600080fd5b506100ed6106b1565b6040516100fa9190610b0e565b60405180910390f35b60606002805480602002602001604051908101604052809291908181526020016000905b828210156102e757838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546101b090610b58565b80601f01602080910402602001604051908101604052809291908181526020018280546101dc90610b58565b80156102295780601f106101fe57610100808354040283529160200191610229565b820191906000526020600020905b81548152906001019060200180831161020c57829003601f168201915b5050505050815260200160028201805461024290610b58565b80601f016020809104026020016040519081016040528092919081815260200182805461026e90610b58565b80156102bb5780601f10610290576101008083540402835291602001916102bb565b820191906000526020600020905b81548152906001019060200180831161029e57829003601f168201915b505050505081526020016003820154815260200160048201548152505081526020019060010190610127565b50505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610be6565b60405180910390fd5b6000479050600081116103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90610c52565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161041090610ca3565b60006040518083038185875af1925050503d806000811461044d576040519150601f19603f3d011682016040523d82523d6000602084013e610452565b606091505b5050905080610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90610d04565b60405180910390fd5b7f513127da5c0be50bc9c6763cb35c374fb3aa664ff0a1fad404452ada92b59924826040516104c59190610b0e565b60405180910390a15050565b343373ffffffffffffffffffffffffffffffffffffffff1631101561052b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052290610c52565b60405180910390fd5b600160008082825461053d9190610d53565b9250508190555060026040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200142815260200134815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816106089190610f33565b50604082015181600201908161061e9190610f33565b50606082015181600301556080820151816004015550503373ffffffffffffffffffffffffffffffffffffffff167fb1c1391b0c6c1e7244a4134896b4bc3f12d2c0cdfef990fac76eec58980a8baa83833460405161067f9392919061103e565b60405180910390a25050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061070e826106e3565b9050919050565b61071e81610703565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561075e578082015181840152602081019050610743565b60008484015250505050565b6000601f19601f8301169050919050565b600061078682610724565b610790818561072f565b93506107a0818560208601610740565b6107a98161076a565b840191505092915050565b6000819050919050565b6107c7816107b4565b82525050565b600060a0830160008301516107e56000860182610715565b50602083015184820360208601526107fd828261077b565b91505060408301518482036040860152610817828261077b565b915050606083015161082c60608601826107be565b50608083015161083f60808601826107be565b508091505092915050565b600061085683836107cd565b905092915050565b6000602082019050919050565b6000610876826106b7565b61088081856106c2565b935083602082028501610892856106d3565b8060005b858110156108ce57848403895281516108af858261084a565b94506108ba8361085e565b925060208a01995050600181019050610896565b50829750879550505050505092915050565b600060208201905081810360008301526108fa818461086b565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109588261076a565b810181811067ffffffffffffffff8211171561097757610976610920565b5b80604052505050565b600061098a610902565b9050610996828261094f565b919050565b600067ffffffffffffffff8211156109b6576109b5610920565b5b6109bf8261076a565b9050602081019050919050565b82818337600083830152505050565b60006109ee6109e98461099b565b610980565b905082815260208101848484011115610a0a57610a0961091b565b5b610a158482856109cc565b509392505050565b600082601f830112610a3257610a31610916565b5b8135610a428482602086016109db565b91505092915050565b60008060408385031215610a6257610a6161090c565b5b600083013567ffffffffffffffff811115610a8057610a7f610911565b5b610a8c85828601610a1d565b925050602083013567ffffffffffffffff811115610aad57610aac610911565b5b610ab985828601610a1d565b9150509250929050565b6000610ace826106e3565b9050919050565b610ade81610ac3565b82525050565b6000602082019050610af96000830184610ad5565b92915050565b610b08816107b4565b82525050565b6000602082019050610b236000830184610aff565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b7057607f821691505b602082108103610b8357610b82610b29565b5b50919050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e207769746864726177000000000000000000600082015250565b6000610bd0601783610b89565b9150610bdb82610b9a565b602082019050919050565b60006020820190508181036000830152610bff81610bc3565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610c3c601483610b89565b9150610c4782610c06565b602082019050919050565b60006020820190508181036000830152610c6b81610c2f565b9050919050565b600081905092915050565b50565b6000610c8d600083610c72565b9150610c9882610c7d565b600082019050919050565b6000610cae82610c80565b9150819050919050565b7f57696e64726177206661696c6564000000000000000000000000000000000000600082015250565b6000610cee600e83610b89565b9150610cf982610cb8565b602082019050919050565b60006020820190508181036000830152610d1d81610ce1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5e826107b4565b9150610d69836107b4565b9250828201905080821115610d8157610d80610d24565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610de97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610dac565b610df38683610dac565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610e30610e2b610e26846107b4565b610e0b565b6107b4565b9050919050565b6000819050919050565b610e4a83610e15565b610e5e610e5682610e37565b848454610db9565b825550505050565b600090565b610e73610e66565b610e7e818484610e41565b505050565b5b81811015610ea257610e97600082610e6b565b600181019050610e84565b5050565b601f821115610ee757610eb881610d87565b610ec184610d9c565b81016020851015610ed0578190505b610ee4610edc85610d9c565b830182610e83565b50505b505050565b600082821c905092915050565b6000610f0a60001984600802610eec565b1980831691505092915050565b6000610f238383610ef9565b9150826002028217905092915050565b610f3c82610724565b67ffffffffffffffff811115610f5557610f54610920565b5b610f5f8254610b58565b610f6a828285610ea6565b600060209050601f831160018114610f9d5760008415610f8b578287015190505b610f958582610f17565b865550610ffd565b601f198416610fab86610d87565b60005b82811015610fd357848901518255600182019150602085019450602081019050610fae565b86831015610ff05784890151610fec601f891682610ef9565b8355505b6001600288020188555050505b505050505050565b600061101082610724565b61101a8185610b89565b935061102a818560208601610740565b6110338161076a565b840191505092915050565b600060608201905081810360008301526110588186611005565b9050818103602083015261106c8185611005565b905061107b6040830184610aff565b94935050505056fea26469706673582212200614bd3d6e0492ed2da56f1fa86e93a6ac5ccfbb70b6f4db09e3b13df61595c864736f6c63430008110033";

type TipJarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TipJarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TipJar__factory extends ContractFactory {
  constructor(...args: TipJarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TipJar> {
    return super.deploy(overrides || {}) as Promise<TipJar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TipJar {
    return super.attach(address) as TipJar;
  }
  override connect(signer: Signer): TipJar__factory {
    return super.connect(signer) as TipJar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TipJarInterface {
    return new utils.Interface(_abi) as TipJarInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TipJar {
    return new Contract(address, _abi, signerOrProvider) as TipJar;
  }
}
